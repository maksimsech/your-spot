name: Deploy to Vercel Preview + Dev envs

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    BUILD_NEXT_ESLINT_IGNORE: ${{ vars.BUILD_NEXT_ESLINT_IGNORE }}

on:
    workflow_dispatch:
    push:
        branches:
            - main
        paths:
            - "src/**"
            - "!src/apps/image-cleanup-worker/**"

jobs:
    ci:
        uses: ./.github/workflows/ci.yml

    buildAndDeploy:
        name: Build and Deploy
        needs: ci
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./src
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version-file: 'src/.nvmrc'
            - name: Install Vercel CLI
              run: npm install vercel@latest --global
            - name: Get npm cache directory
              id: npm-cache-dir
              run: |
                echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
            - uses: actions/cache@v3
              id: npm-cache
              with:
                path: ${{ steps.npm-cache-dir.outputs.dir }}
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-
            - name: Install packages
              run: npm ci
            - name: Pull env variables
              run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
            - name: Build
              run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
            - name: Deploy to Preview + assign Dev env
              run: |
                vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > preview-domain.txt
                vercel alias --scope ${{ secrets.VERCEL_TEAM_ID }} --token ${{ secrets.VERCEL_TOKEN }} set `cat preview-domain.txt` ${{ vars.DEV_DOMAIN }}
